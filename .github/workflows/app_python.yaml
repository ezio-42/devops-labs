name: app_python

on:
  push:
    paths:
      - "app_python/**"
      - ".github/workflows/app_python.yaml"

defaults:
  run:
    working-directory: app_python

jobs:
  test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Python
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: poetry

      - name: Install poetry
        run: |
          python3 -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
      - run: poetry install --no-interaction

      - name: Run tests using pytest
        run: pytest . -v

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: snyk/actions/setup@master

      # Snyk requires dependencies to be installed before scanning

      - name: Install Python
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: poetry

      - name: Install poetry
        run: |
          python3 -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
      - run: poetry install --no-interaction

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/setup@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  security-docker:
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/moscow-time-py:latest

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  deploy:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: [pre-commit, test, security, security-docker]
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: app_python
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/moscow-time-py:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/moscow-time-py:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/moscow-time-py:buildcache,mode=max
